<!-- Dashboard Navigation -->
<nav class="bg-white shadow-sm">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-4">
            <div class="flex items-center space-x-8">
                <h1 class="text-xl font-bold text-gray-900">Upload Files</h1>
                <div class="hidden md:flex space-x-4">
                    <a href="/dashboard" class="text-gray-500 hover:text-gray-700">Home</a>
                    <a href="/dashboard/publication" class="text-gray-500 hover:text-gray-700">Publication</a>
                    <a href="/dashboard/upload" class="text-primary-600 hover:text-primary-700">Upload</a>
                    <a href="/dashboard/notices" class="text-gray-500 hover:text-gray-700">Notices</a>
                    <a href="/dashboard/calendar" class="text-gray-500 hover:text-gray-700">Calendar</a>
                    <a href="/dashboard/weekly-sheets" class="text-gray-500 hover:text-gray-700">Weekly Sheets</a>
                </div>
            </div>
            <div class="flex items-center space-x-4">
                <span class="text-sm text-gray-700">Welcome, <%= user.email %></span>
                <button onclick="logout()" class="btn-secondary text-sm">Logout</button>
            </div>
        </div>
    </div>
</nav>

<!-- Upload Content -->
<main class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        
        <!-- InDesign Specification Sheet -->
        <div class="card">
            <h3 class="text-lg font-medium text-gray-900 mb-4">InDesign Specification Sheet</h3>
            <p class="text-sm text-gray-600 mb-4">
                Upload your InDesign template specifications for automated notice conversion.
            </p>
            <form id="spec-upload-form" enctype="multipart/form-data">
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Select Specification File
                    </label>
                    <input type="file" name="file" id="spec-file" 
                           accept=".pdf,.indd,.idml,.docx,.doc"
                           class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100">
                    <p class="text-xs text-gray-500 mt-1">
                        Supported: PDF, INDD, IDML, DOCX, DOC
                    </p>
                </div>
                <button type="submit" class="btn-primary w-full">
                    Upload Specification
                </button>
            </form>
            <div id="spec-result" class="mt-4 hidden"></div>
        </div>

        <!-- Pricing Sheet -->
        <div class="card">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Pricing Sheet</h3>
            <p class="text-sm text-gray-600 mb-4">
                Upload your pricing information for automatic cost calculations.
            </p>
            <form id="pricing-upload-form" enctype="multipart/form-data">
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Select Pricing File
                    </label>
                    <input type="file" name="file" id="pricing-file" 
                           accept=".pdf,.xlsx,.xls,.csv,.docx,.doc"
                           class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100">
                    <p class="text-xs text-gray-500 mt-1">
                        Supported: PDF, Excel, CSV, DOCX, DOC
                    </p>
                </div>
                <button type="submit" class="btn-primary w-full">
                    Upload Pricing Sheet
                </button>
            </form>
            <div id="pricing-result" class="mt-4 hidden"></div>
        </div>

        <!-- Public Notice -->
        <div class="card">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Public Notice</h3>
            <p class="text-sm text-gray-600 mb-4">
                Upload a public notice document for conversion and scheduling.
            </p>
            <form id="notice-upload-form" enctype="multipart/form-data">
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Notice Title
                    </label>
                    <input type="text" name="title" id="notice-title" 
                           class="input-field w-full" 
                           placeholder="Enter notice title"
                           required>
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Select Notice File
                    </label>
                    <input type="file" name="file" id="notice-file" 
                           accept=".pdf,.docx,.doc,.txt,.rtf"
                           class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100">
                    <p class="text-xs text-gray-500 mt-1">
                        Supported: PDF, DOCX, DOC, TXT, RTF
                    </p>
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Scheduled Date
                    </label>
                    <input type="date" name="scheduledDate" id="scheduled-date" 
                           class="input-field w-full" 
                           required>
                </div>
                <button type="submit" class="btn-primary w-full">
                    Upload Notice
                </button>
            </form>
            <div id="notice-result" class="mt-4 hidden"></div>
        </div>
    </div>
</main>

<script>
async function logout() {
    try {
        await fetch('/api/auth/logout', { method: 'POST' });
        window.location.href = '/';
    } catch (error) {
        console.error('Logout error:', error);
        window.location.href = '/';
    }
}

// Generic upload handler
async function handleUpload(formId, type) {
    const form = document.getElementById(formId);
    const resultDiv = document.getElementById(`${type}-result`);
    const fileInput = form.querySelector('input[type="file"]');
    const submitButton = form.querySelector('button[type="submit"]');
    
    const formData = new FormData();
    formData.append('file', fileInput.files[0]);
    formData.append('type', type);
    
    // For notices, add additional fields
    if (type === 'notice') {
        const title = form.querySelector('#notice-title').value;
        const scheduledDate = form.querySelector('#scheduled-date').value;
        formData.append('title', title);
        formData.append('scheduledDate', scheduledDate);
    }
    
    try {
        submitButton.disabled = true;
        submitButton.textContent = 'Uploading...';
        
        const endpoint = type === 'notice' ? '/api/notices' : '/api/upload';
        const response = await fetch(endpoint, {
            method: 'POST',
            body: formData
        });
        
        const data = await response.json();
        
        if (response.ok) {
            resultDiv.innerHTML = `<div class="text-green-600 text-sm">${data.message}</div>`;
            resultDiv.classList.remove('hidden');
            form.reset();
        } else {
            resultDiv.innerHTML = `<div class="text-red-600 text-sm">Error: ${data.error}</div>`;
            resultDiv.classList.remove('hidden');
        }
    } catch (error) {
        resultDiv.innerHTML = `<div class="text-red-600 text-sm">Upload failed: ${error.message}</div>`;
        resultDiv.classList.remove('hidden');
    } finally {
        submitButton.disabled = false;
        submitButton.textContent = submitButton.textContent.replace('Uploading...', 
            type === 'spec' ? 'Upload Specification' : 
            type === 'pricing' ? 'Upload Pricing Sheet' : 
            'Upload Notice');
    }
}

// Form event listeners
document.getElementById('spec-upload-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    await handleUpload('spec-upload-form', 'spec');
});

document.getElementById('pricing-upload-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    await handleUpload('pricing-upload-form', 'pricing');
});

document.getElementById('notice-upload-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    await handleUpload('notice-upload-form', 'notice');
});
</script>
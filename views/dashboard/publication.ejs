<!-- Dashboard Navigation -->
<nav class="bg-white shadow-sm">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-4">
            <div class="flex items-center space-x-8">
                <h1 class="text-xl font-bold text-gray-900">Publication Profile</h1>
                <div class="hidden md:flex space-x-4">
                    <a href="/dashboard" class="text-gray-500 hover:text-gray-700">Home</a>
                    <a href="/dashboard/publication" class="text-primary-600 hover:text-primary-700">Publication</a>
                    <a href="/dashboard/upload" class="text-gray-500 hover:text-gray-700">Upload</a>
                    <a href="/dashboard/notices" class="text-gray-500 hover:text-gray-700">Notices</a>
                    <a href="/dashboard/calendar" class="text-gray-500 hover:text-gray-700">Calendar</a>
                    <a href="/dashboard/weekly-sheets" class="text-gray-500 hover:text-gray-700">Weekly Sheets</a>
                </div>
            </div>
            <div class="flex items-center space-x-4">
                <span class="text-sm text-gray-700">Welcome, <%= user.email %></span>
                <button onclick="logout()" class="btn-secondary text-sm">Logout</button>
            </div>
        </div>
    </div>
</nav>

<!-- Publication Content -->
<main class="max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <div class="card">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Publication Profile</h2>
        
        <form id="publication-form">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Publication Name *
                    </label>
                    <input type="text" name="name" id="name" 
                           class="input-field w-full" 
                           placeholder="Enter publication name"
                           required>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Email
                    </label>
                    <input type="email" name="email" id="email" 
                           class="input-field w-full" 
                           placeholder="contact@publication.com">
                </div>
                
                <div class="md:col-span-2">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Address
                    </label>
                    <textarea name="address" id="address" 
                              class="input-field w-full" 
                              rows="3"
                              placeholder="Enter publication address"></textarea>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Phone
                    </label>
                    <input type="tel" name="phone" id="phone" 
                           class="input-field w-full" 
                           placeholder="(555) 123-4567">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Website
                    </label>
                    <input type="url" name="website" id="website" 
                           class="input-field w-full" 
                           placeholder="https://www.publication.com">
                </div>
            </div>
            
            <div class="mt-6 flex justify-end space-x-4">
                <button type="button" onclick="loadPublication()" class="btn-secondary">
                    Load Current
                </button>
                <button type="submit" class="btn-primary">
                    Save Publication
                </button>
            </div>
        </form>
        
        <div id="result-message" class="mt-4 hidden"></div>
    </div>
</main>

<script>
async function logout() {
    try {
        await fetch('/api/auth/logout', { method: 'POST' });
        window.location.href = '/';
    } catch (error) {
        console.error('Logout error:', error);
        window.location.href = '/';
    }
}

async function loadPublication() {
    try {
        const response = await fetch('/api/publication');
        const data = await response.json();
        
        if (response.ok && data.publication) {
            const pub = data.publication;
            document.getElementById('name').value = pub.name || '';
            document.getElementById('email').value = pub.email || '';
            document.getElementById('address').value = pub.address || '';
            document.getElementById('phone').value = pub.phone || '';
            document.getElementById('website').value = pub.website || '';
            
            showMessage('Publication loaded successfully', 'success');
        } else {
            showMessage('No publication found. Please create one.', 'info');
        }
    } catch (error) {
        showMessage('Failed to load publication', 'error');
    }
}

function showMessage(message, type) {
    const resultDiv = document.getElementById('result-message');
    const colorClass = type === 'success' ? 'text-green-600' : 
                      type === 'error' ? 'text-red-600' : 
                      'text-blue-600';
    
    resultDiv.innerHTML = `<div class="${colorClass} text-sm">${message}</div>`;
    resultDiv.classList.remove('hidden');
    
    setTimeout(() => {
        resultDiv.classList.add('hidden');
    }, 5000);
}

document.getElementById('publication-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());
    
    try {
        // Try to update first, then create if it doesn't exist
        let response = await fetch('/api/publication', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        });
        
        if (!response.ok && response.status === 404) {
            // Publication doesn't exist, create it
            response = await fetch('/api/publication', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });
        }
        
        const result = await response.json();
        
        if (response.ok) {
            showMessage(result.message, 'success');
        } else {
            showMessage(result.error || 'Failed to save publication', 'error');
        }
    } catch (error) {
        showMessage('Network error occurred', 'error');
    }
});

// Load publication on page load
document.addEventListener('DOMContentLoaded', loadPublication);
</script>